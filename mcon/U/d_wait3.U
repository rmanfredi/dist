?RCS: $Id$
?RCS:
?RCS: Copyright (c) 1991-1997, 2004-2006, Raphael Manfredi
?RCS:
?RCS: You may redistribute only under the terms of the Artistic License,
?RCS: as specified in the README file that comes with the distribution.
?RCS: You may reuse parts of this distribution only within the terms of
?RCS: that same Artistic License; a copy of which may be found at the root
?RCS: of the source tree for dist 4.0.
?RCS:
?RCS: $Log: d_wait3.U,v $
?RCS: Revision 3.0  1993/08/18  12:08:01  ram
?RCS: Baseline for dist 3.0 netwide release.
?RCS:
?MAKE:d_wait3: Trylink cat i_sysresrc i_syswait
?MAKE:	-pick add $@ %<
?S:d_wait3:
?S:	This variable conditionally defines the HAS_WAIT3 symbol, which
?S:	indicates to the C program that the wait3() subroutine exists.
?S:.
?C:HAS_WAIT3:
?C:	This symbol, if defined, indicates that the wait3() subroutine
?C:	exists.
?C:.
?H:#$d_wait3 HAS_WAIT3	/**/
?H:.
?LINT:set d_wait3
: see if 'wait3()' exists
$cat >try.c <<EOC
#include <sys/types.h>
#$i_syswait I_SYS_WAIT
#ifdef I_SYS_WAIT
#include <sys/wait.h>
#endif
#$i_sysresrc I_SYS_RESOURCE
#ifdef I_SYS_RESOURCE
#include <sys/resource.h>
#endif
int main(void)
{
	static pid_t ret;
	static int status, options;
	static struct rusage ru;
	options |= WNOHANG;
	options |= WUNTRACED;
	ret |= wait3(&status, options, &ru);
	return ret ? 0 : 1;
}
EOC
cyn=wait3
set d_wait3
eval $trylink

