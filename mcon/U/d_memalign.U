?RCS: $Id$
?RCS:
?RCS: Copyright (c) 1991-1997, 2004-2006, Raphael Manfredi
?RCS:
?RCS: You may redistribute only under the terms of the Artistic License,
?RCS: as specified in the README file that comes with the distribution.
?RCS: You may reuse parts of this distribution only within the terms of
?RCS: that same Artistic License; a copy of which may be found at the root
?RCS: of the source tree for dist 4.0.
?RCS:
?RCS: $Log: d_memalign.U,v $
?RCS:
?MAKE:d_memalign: Trylink cat i_stdlib i_malloc
?MAKE:	-pick add $@ %<
?S:d_memalign:
?S:	This variable conditionally defines the HAS_MEMALIGN symbol, which
?S:	indicates to the C program that the memalign() routine is available.
?S:.
?C:HAS_MEMALIGN :
?C:	This symbol, if defined, indicates that the memalign routine is
?C:	available to allocate aligned memory.
?C:.
?H:#$d_memalign HAS_MEMALIGN		/**/
?H:.
?LINT:set d_memalign
: see if memalign exists
$cat >try.c <<EOC
#define _GNU_SOURCE
#$i_stdlib I_STDLIB
#ifdef I_STDLIB
#include <stdlib.h>
#endif
#$i_malloc I_MALLOC
#ifdef I_MALLOC
#include <malloc.h>
#endif
int main(void)
{
	static size_t align, size;
	void *p;
	p = memalign(align, size);
	return p ? 0 : 1;
}
EOC
cyn=memalign
set d_memalign
eval $trylink

