?RCS: $Id$
?RCS:
?RCS: Copyright (c) 1991-1997, 2004-2006, Raphael Manfredi
?RCS:
?RCS: You may redistribute only under the terms of the Artistic License,
?RCS: as specified in the README file that comes with the distribution.
?RCS: You may reuse parts of this distribution only within the terms of
?RCS: that same Artistic License; a copy of which may be found at the root
?RCS: of the source tree for dist 4.0.
?RCS:
?RCS: $Log: d_msync.U,v $
?RCS: Revision 3.0.1.1  1993/12/15  08:19:17  ram
?RCS: patch15: created
?RCS:
?MAKE:d_msync: Trylink cat i_sysmman
?MAKE:	-pick add $@ %<
?S:d_msync:
?S:	This variable conditionally defines HAS_MSYNC if msync() is
?S:	available to synchronize a mapped file.
?S:.
?C:HAS_MSYNC:
?C:	This symbol, if defined, indicates that the msync system call is
?C:	available to synchronize a mapped file.
?C:.
?H:#$d_msync HAS_MSYNC		/**/
?H:.
?LINT:set d_msync
: see if msync exists
$cat >try.c <<EOC
#$i_sysmman I_SYS_MMAN
#ifdef I_SYS_MMAN
#include <sys/mman.h>
#endif
int main(void)
{
	static int ret, flags;
	static void *addr;
	static size_t len;
	flags |= MS_ASYNC;
	flags |= MS_SYNC;
	flags |= MS_INVALIDATE;
	ret |= msync(addr, len, flags);
	return ret ? 0 : 1;
}
EOC
cyn=msync
set d_msync
eval $trylink

