?RCS: $Id$
?RCS:
?RCS: Copyright (c) 1991-1997, 2004-2006, Raphael Manfredi
?RCS:
?RCS: You may redistribute only under the terms of the Artistic License,
?RCS: as specified in the README file that comes with the distribution.
?RCS: You may reuse parts of this distribution only within the terms of
?RCS: that same Artistic License; a copy of which may be found at the root
?RCS: of the source tree for dist 4.0.
?RCS:
?RCS: $Log: d_syscall.U,v $
?RCS: Revision 3.0  1993/08/18  12:07:42  ram
?RCS: Baseline for dist 3.0 netwide release.
?RCS:
?MAKE:d_syscall: Trylink cat i_unistd
?MAKE:	-pick add $@ %<
?S:d_syscall:
?S:	This variable conditionally defines HAS_SYSCALL if syscall() is
?S:	available call arbitrary system calls.
?S:.
?C:HAS_SYSCALL (SYSCALL):
?C:	This symbol, if defined, indicates that the syscall routine is
?C:	available to call arbitrary system calls. If undefined, that's tough.
?C:.
?H:#$d_syscall HAS_SYSCALL	/**/
?H:.
?LINT:set d_syscall
: see if syscall exists
$cat >try.c <<EOC
#include <sys/syscall.h>
#$i_unistd I_UNISTD
#ifdef I_UNISTD
#include <unistd.h>
#endif
int main(void)
{
	static int ret, number;
	ret |= syscall(number, 0);
	return ret ? 0 : 1;
}
EOC
cyn=syscall
set d_syscall
eval $trylink

