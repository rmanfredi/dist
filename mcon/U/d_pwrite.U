?RCS: $Id$
?RCS:
?RCS: Copyright (c) 1991-1997, 2004-2006, Raphael Manfredi
?RCS:
?RCS: You may redistribute only under the terms of the Artistic License,
?RCS: as specified in the README file that comes with the distribution.
?RCS: You may reuse parts of this distribution only within the terms of
?RCS: that same Artistic License; a copy of which may be found at the root
?RCS: of the source tree for dist 4.0.
?RCS:
?RCS: $Log: d_pwrite.U,v $
?RCS:
?MAKE:d_pwrite: Trylink cat i_unistd
?MAKE:	-pick add $@ %<
?S:d_pwrite:
?S:	This variable conditionally defines the HAS_PWRITE symbol, which
?S:	indicates to the C program that the pwrite() routine is available.
?S:.
?C:HAS_PWRITE :
?C:	This symbol, if defined, indicates that the pwrite routine is
?C:	available to perform writes on a file descriptor at a given offset.
?C:.
?H:#$d_pwrite HAS_PWRITE		/**/
?H:.
?LINT:set d_pwrite
: see if pwrite exists
$cat >try.c <<EOC
#define _GNU_SOURCE
#include <sys/types.h>
#$i_unistd I_UNISTD
#ifdef I_UNISTD
#include <unistd.h>
#endif
int main(void)
{
	static ssize_t ret;
	static int fd;
	static char buf[1];
	static size_t size;
	static off_t offset;
	ret |= pwrite(fd, buf, size, offset);
	return ret ? 0 : 1;
}
EOC
cyn=pwrite
set d_pwrite
eval $trylink

