?RCS: $Id$
?RCS:
?RCS: Copyright (c) 1991-1997, 2004-2006, Raphael Manfredi
?RCS:
?RCS: You may redistribute only under the terms of the Artistic License,
?RCS: as specified in the README file that comes with the distribution.
?RCS: You may reuse parts of this distribution only within the terms of
?RCS: that same Artistic License; a copy of which may be found at the root
?RCS: of the source tree for dist 4.0.
?RCS:
?RCS: $Log: d_getwd.U,v $
?RCS: Revision 3.0  1993/08/18  12:06:18  ram
?RCS: Baseline for dist 3.0 netwide release.
?RCS:
?MAKE:d_getwd: Trylink cat i_unistd
?MAKE:	-pick add $@ %<
?S:d_getwd:
?S:	This variable conditionally defines HAS_GETWD if getwd() is
?S:	available to get working directory. If not, you should
?S:	probably use getcwd().
?S:.
?C:HAS_GETWD (GETWD):
?C:	This symbol, if defined, indicates that the getwd routine is
?C:	available to get working directory. If not, you should
?C:	probably use getcwd().
?C:.
?H:#$d_getwd HAS_GETWD		/**/
?H:.
?LINT:set d_getwd
: see if getwd exists
$cat >try.c <<EOC
#include <sys/param.h>
#$i_unistd I_UNISTD
#ifdef I_UNISTD
#include <unistd.h>
#endif
int main(void)
{
	static char ret;
	static char buf[MAXPATHLEN];
	ret |= *getwd(buf);
	return ret ? 0 : 1;
}
EOC
cyn=getwd
set d_getwd
eval $trylink

