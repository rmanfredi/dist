?RCS: $Id$
?RCS:
?RCS: Copyright (c) 2012  Raphael Manfredi
?RCS:
?RCS: You may redistribute only under the terms of the Artistic License,
?RCS: as specified in the README file that comes with the distribution.
?RCS: You may reuse parts of this distribution only within the terms of
?RCS: that same Artistic License; a copy of which may be found at the root
?RCS: of the source tree for dist 4.0.
?RCS:
?RCS: $Log: d_getrlimit.U,v $
?RCS:
?MAKE:d_getrlimit: Trylink cat i_systime
?MAKE:	-pick add $@ %<
?S:d_getrlimit:
?S:	This variable conditionally defines the HAS_GETRLIMIT symbol, which
?S:	indicates to the C program that the getrlimit() routine is available
?S:	to get process resource limits.
?S:.
?C:HAS_GETRLIMIT :
?C:	This symbol, if defined, indicates that the getrlimit() routine is
?C:	available to get process resource limits.
?C:.
?H:#$d_getrlimit HAS_GETRLIMIT		/**/
?H:.
?LINT:set d_getrlimit
: see if getrlimit exists
$cat >try.c <<EOC
#$i_systime I_SYS_TIME
#ifdef I_SYS_TIME
#include <sys/time.h>
#endif
#include <sys/resource.h>
int main(void)
{
	static struct rlimit lim;
	int ret;
	ret |= getrlimit(RLIMIT_CORE, &lim);
	ret += lim.rlim_cur > lim.rlim_max ? 1 : 0;
	return ret ? 0 : 1;
}
EOC
cyn=getrlimit
set d_getrlimit
eval $trylink

