?RCS: $Id$
?RCS:
?RCS: Copyright (c) 1991-1997, 2004-2006, Raphael Manfredi
?RCS:
?RCS: You may redistribute only under the terms of the Artistic License,
?RCS: as specified in the README file that comes with the distribution.
?RCS: You may reuse parts of this distribution only within the terms of
?RCS: that same Artistic License; a copy of which may be found at the root
?RCS: of the source tree for dist 4.0.
?RCS:
?RCS: $Log: d_setprior.U,v $
?RCS: Revision 3.0  1993/08/18  12:07:11  ram
?RCS: Baseline for dist 3.0 netwide release.
?RCS:
?MAKE:d_setprior: Trylink cat i_sysresrc
?MAKE:	-pick add $@ %<
?S:d_setprior:
?S:	This variable conditionally defines HAS_SETPRIORITY if setpriority()
?S:	is available to set a process's priority.
?S:.
?C:HAS_SETPRIORITY (SETPRIORITY):
?C:	This symbol, if defined, indicates that the setpriority routine is
?C:	available to set a process's priority.
?C:.
?H:#$d_setprior HAS_SETPRIORITY		/**/
?H:.
?LINT:set d_setprior
: see if setpriority exists
$cat >try.c <<EOC
#$i_sysresrc I_SYS_RESOURCE
#ifdef I_SYS_RESOURCE
#include <sys/resource.h>
#endif
int main(void)
{
	static int ret, prio;
	static id_t id;
	ret |= setpriority(PRIO_PROCESS, id, prio);
	ret |= setpriority(PRIO_PGRP, id, prio);
	ret |= setpriority(PRIO_USER, id, prio);
	return ret ? 0 : 1;
}
EOC
cyn=setpriority
set d_setprior
eval $trylink

